def test_sequence(p, moves):
    """Test what sequence is generated by the given moves"""
    from collections import deque
    dq = deque(p)
    result = []
    
    for move in moves:
        if move == 'L':
            result.append(dq.popleft())
        else:
            result.append(dq.pop())
    
    return result

def is_bad_sequence(seq):
    """Check if sequence contains 5 consecutive increasing or decreasing elements"""
    if len(seq) < 5:
        return False
    for i in range(len(seq) - 4):
        if all(seq[j] < seq[j+1] for j in range(i, i+4)):
            return True
    for i in range(len(seq) - 4):
        if all(seq[j] > seq[j+1] for j in range(i, i+4)):
            return True
    return False

# Test first example
p1 = [1, 2, 3, 4, 5, 6, 7]
moves1 = "LLLRRRL"
seq1 = test_sequence(p1, moves1)
print(f"Input: {p1}")
print(f"Moves: {moves1}")
print(f"Result: {seq1}")
print(f"Is bad: {is_bad_sequence(seq1)}")
print()

# Expected moves
expected_moves1 = "RRRLLLL"
expected_seq1 = test_sequence(p1, expected_moves1)
print(f"Expected moves: {expected_moves1}")
print(f"Expected result: {expected_seq1}")
print(f"Is bad: {is_bad_sequence(expected_seq1)}")
